---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import Breadcrumb from "../../../components/blog/astro/Breadcrumb.astro";
import TableOfContent from "../../../components/blog/astro/TableOfContent.astro";
import Tags from "../../../components/blog/astro/Tags.astro";
import BlogLayout from "../../../layouts/BlogLayout.astro";
import "/src/styles/index.scss";

export async function getStaticPaths() {
  const blog = await getCollection('blog');
  return blog.map((entry) => ({
    params: { slug: entry.slug },
    props: {entry},
  }));
}
type Props = {entry: CollectionEntry<'blog'>};
const { entry } = Astro.props as Props;
const { Content, headings} = await entry.render();
const imageUrl = entry.data.image.src ? entry.data.image.src : "";
---

<BlogLayout 
  title={entry.data.title} 
  description={entry.data.description} 
  image={entry.data.image.src} 
  url={`https://www.monblogastro.com/blog/${entry.slug}`}
>
<div class="article">
  <div class="article__header" style={`--article-header-bg: url(${imageUrl});`}>
    <!-- <h1>{entry.data.title}</h1> -->
  </div>
  <div class="article__toc">
    <TableOfContent headings={headings} />
  </div>
  <div class="article__tags">
    <Tags tags={entry.data.tags} />
  </div>
  <div class="article__breadcrumb">
    <Breadcrumb items={[{ href: "/blog", label: "Blog" }, { href: "/blog/plantes", label: "Plantes" }, { label: entry.data.title, current: true }]} />
  </div>
  <div class="article__content">
    <Content/>
  </div>
  <div class="article__comments"></div>
</div>

</BlogLayout>